*8.3)  HttpSession   会话对象 (保存数据)==》所有页面共享
         void setAttribute(String var1, Object var2);   保存数据key-value
         Object getAttribute(String var1); 获得数据返回Object对象

         void removeAttribute(String var1); 移除属性
         void invalidate();  会话失效
         String getId();   获得会话ID
         void setMaxInactiveInterval(int var1);  设置有效时间
         int getMaxInactiveInterval();   获得会话的周期默认：1800秒 =30分

注意：1）会话与浏览器有关；
      2）可以保存字符串和对象；
      3）保存在服务器端；
      4）会话有效时间是1800秒，也就是30分钟；

用于购物车！！！

二、过滤器
  是向Web应用程序的请求和响应添加功能的Web服务组件
  过滤器可以统一地集中处理请求和响应
  使用过滤器技术实现对请求数据的过滤

  工作流程：

    <!-- 映射路径-->
    <filter-mapping>
        <filter-name>MyFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    完全匹配：/index.jsp
    目录匹配：/admin/*
    扩展名匹配：*.do
    全部匹配：/*


 过滤器的生命周期：
     实例化
     初始化：init()
     过滤：doFilter()
     销毁：destroy()

统一处理中文乱码问题!! ==>servlet使用！！

过滤器链
   多个过滤器会形成过滤器链
   根据过滤器的配置，按照先后顺序执行


过滤器的应用场合
   *1、对请求和响应进行统一处理
    2、 对请求进行日志记录和审核
    3、 对数据进行屏蔽和替换
    4、 对数据进行加密和解密


三、监听器是Web应用程序事件模型的一部分
  Web应用中的某些状态发生改变时会产生相应的事件
  ServletContext、HttpSession、ServletRequest三个域对象引发的事件
  域对象中的属性引发的事件
  监听器可以接收这些事件，以便在事件发生时做出相关处理

使用监听器统计在线人数
    1、创建类实现HttpSessionBindingListener接口
       public class User  implements HttpSessionBindingListener {}

    2、在valueBound()和valueUnbound()方法中实现用户数量的统计

      @Override
        public void valueBound(HttpSessionBindingEvent event) {
            Counts.count++;
        }

        @Override
        public void valueUnbound(HttpSessionBindingEvent event) {
            Counts.count--;
        }
      说明：  valueUnbound方法会在三种情况下自动调用
             1）调用使session失效的方法：session.invalidate()
             2）session超时
             3）调用setAttribute重新设置了别的对象，或是调用removeAttribute移除了这个属性

    3、将其实例添加到session作用域
        //保存的是对象
         session.setAttribute("user", new User(name));




Jsp
   session 会话是内置对象，不需要创建！！
   <%  java 小脚本;  %>
   <%=表达式%> 显示数据

说明
http://localhost:8888/mvn_0324_war_exploded/jsp/login.jsp

http://localhost:8888/mvn_0324_war_exploded/jsp/myclose

注意： ../返回上一层目录
<a href="../myclose">离开</a>

http://localhost:8888/mvn_0324_war_exploded/myclose



public class UserListener implements
ServletContextListener 整个应用程序的监听,
HttpSessionListener会话的监听,
HttpSessionAttributeListener 会话属性的监听
